Sure! Here's the Dockerfile:

```
# Use the official Rust image as the parent image
FROM rust:slim-buster AS build

# Set the working directory to /app
WORKDIR /app

# Copy the current directory contents into the container at /app
COPY . .

# Build the application
RUN cargo build --release

# Use a minimal Alpine image as the parent image
FROM alpine:latest

# Copy the binary from the build stage to the new image
COPY --from=build /app/target/release/weather-api .

# Set the binary as the entrypoint of the container
ENTRYPOINT ["./weather-api"]
```

Note: This Dockerfile assumes that the name of the binary generated by the Rust build process is `weather-api`. If your binary has a different name, you will need to update the `COPY` and `ENTRYPOINT` lines accordingly.